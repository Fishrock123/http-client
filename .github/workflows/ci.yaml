name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - staging
      - trying

env:
  RUSTFLAGS: -Dwarnings

jobs:
  build_and_test:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [nightly]
        backend: [curl_client, h1_client, hyper_client]

    steps:
    - uses: actions/checkout@master

    - name: Install ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: check
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --workspace --benches --bins --examples --tests

    - name: check no features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features

    - name: tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --no-default-features --features '${{ matrix.backend }}'

  check_fmt_clippy_docs:
    name: Checking fmt, clippy, and docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: clippy
      run: cargo clippy --workspace --benches --bins --examples --tests -- -D warnings

    - name: fmt
      run: cargo fmt --all -- --check

    - name: docs
      run: cargo doc --no-deps

  check_wasm:
    name: Check wasm targets
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: Install nightly with wasm32-unknown-unknown
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: wasm32-unknown-unknown
        override: true

    - name: check
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --target wasm32-unknown-unknown --no-default-features --features "wasm_client"
